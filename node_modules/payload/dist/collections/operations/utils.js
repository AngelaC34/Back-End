"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "buildAfterOperation", {
    enumerable: true,
    get: function() {
        return buildAfterOperation;
    }
});
const buildAfterOperation = async (operationArgs)=>{
    const { args, collection, operation, result } = operationArgs;
    let newResult = result;
    await args.collection.config.hooks.afterOperation.reduce(async (priorHook, hook)=>{
        await priorHook;
        const hookResult = await hook({
            args,
            collection,
            operation,
            req: args.req,
            result: newResult
        });
        if (hookResult !== undefined) {
            newResult = hookResult;
        }
    }, Promise.resolve());
    return newResult;
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb2xsZWN0aW9ucy9vcGVyYXRpb25zL3V0aWxzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB0eXBlIGZvcmdvdFBhc3N3b3JkIGZyb20gJy4uLy4uL2F1dGgvb3BlcmF0aW9ucy9mb3Jnb3RQYXNzd29yZCdcbmltcG9ydCB0eXBlIGxvZ2luIGZyb20gJy4uLy4uL2F1dGgvb3BlcmF0aW9ucy9sb2dpbidcbmltcG9ydCB0eXBlIHJlZnJlc2ggZnJvbSAnLi4vLi4vYXV0aC9vcGVyYXRpb25zL3JlZnJlc2gnXG5pbXBvcnQgdHlwZSB7IFBheWxvYWRSZXF1ZXN0IH0gZnJvbSAnLi4vLi4vZXhwcmVzcy90eXBlcydcbmltcG9ydCB0eXBlIHsgQWZ0ZXJPcGVyYXRpb25Ib29rLCBTYW5pdGl6ZWRDb2xsZWN0aW9uQ29uZmlnLCBUeXBlV2l0aElEIH0gZnJvbSAnLi4vY29uZmlnL3R5cGVzJ1xuaW1wb3J0IHR5cGUgY3JlYXRlIGZyb20gJy4vY3JlYXRlJ1xuaW1wb3J0IHR5cGUgZGVsZXRlT3BlcmF0aW9uIGZyb20gJy4vZGVsZXRlJ1xuaW1wb3J0IHR5cGUgZGVsZXRlQnlJRCBmcm9tICcuL2RlbGV0ZUJ5SUQnXG5pbXBvcnQgdHlwZSBmaW5kIGZyb20gJy4vZmluZCdcbmltcG9ydCB0eXBlIGZpbmRCeUlEIGZyb20gJy4vZmluZEJ5SUQnXG5pbXBvcnQgdHlwZSB1cGRhdGUgZnJvbSAnLi91cGRhdGUnXG5pbXBvcnQgdHlwZSB1cGRhdGVCeUlEIGZyb20gJy4vdXBkYXRlQnlJRCdcblxuZXhwb3J0IHR5cGUgQWZ0ZXJPcGVyYXRpb25NYXA8VCBleHRlbmRzIFR5cGVXaXRoSUQ+ID0ge1xuICBjcmVhdGU6IHR5cGVvZiBjcmVhdGUgLy8gdG9kbzogcGFzcyBjb3JyZWN0IGdlbmVyaWNcbiAgZGVsZXRlOiB0eXBlb2YgZGVsZXRlT3BlcmF0aW9uIC8vIHRvZG86IHBhc3MgY29ycmVjdCBnZW5lcmljXG4gIGRlbGV0ZUJ5SUQ6IHR5cGVvZiBkZWxldGVCeUlEIC8vIHRvZG86IHBhc3MgY29ycmVjdCBnZW5lcmljXG4gIGZpbmQ6IHR5cGVvZiBmaW5kPFQ+XG4gIGZpbmRCeUlEOiB0eXBlb2YgZmluZEJ5SUQ8VD5cbiAgZm9yZ290UGFzc3dvcmQ6IHR5cGVvZiBmb3Jnb3RQYXNzd29yZFxuICBsb2dpbjogdHlwZW9mIGxvZ2luXG4gIHJlZnJlc2g6IHR5cGVvZiByZWZyZXNoXG4gIHVwZGF0ZTogdHlwZW9mIHVwZGF0ZSAvLyB0b2RvOiBwYXNzIGNvcnJlY3QgZ2VuZXJpY1xuICB1cGRhdGVCeUlEOiB0eXBlb2YgdXBkYXRlQnlJRCAvLyB0b2RvOiBwYXNzIGNvcnJlY3QgZ2VuZXJpY1xufVxuZXhwb3J0IHR5cGUgQWZ0ZXJPcGVyYXRpb25Bcmc8VCBleHRlbmRzIFR5cGVXaXRoSUQ+ID0ge1xuICAvKiogVGhlIGNvbGxlY3Rpb24gd2hpY2ggdGhpcyBob29rIGlzIGJlaW5nIHJ1biBvbiAqL1xuICBjb2xsZWN0aW9uOiBTYW5pdGl6ZWRDb2xsZWN0aW9uQ29uZmlnXG4gIHJlcTogUGF5bG9hZFJlcXVlc3Rcbn0gJiAoXG4gIHwge1xuICAgICAgYXJnczogUGFyYW1ldGVyczxBZnRlck9wZXJhdGlvbk1hcDxUPlsnY3JlYXRlJ10+WzBdXG4gICAgICBvcGVyYXRpb246ICdjcmVhdGUnXG4gICAgICByZXN1bHQ6IEF3YWl0ZWQ8UmV0dXJuVHlwZTxBZnRlck9wZXJhdGlvbk1hcDxUPlsnY3JlYXRlJ10+PlxuICAgIH1cbiAgfCB7XG4gICAgICBhcmdzOiBQYXJhbWV0ZXJzPEFmdGVyT3BlcmF0aW9uTWFwPFQ+WydkZWxldGUnXT5bMF1cbiAgICAgIG9wZXJhdGlvbjogJ2RlbGV0ZSdcbiAgICAgIHJlc3VsdDogQXdhaXRlZDxSZXR1cm5UeXBlPEFmdGVyT3BlcmF0aW9uTWFwPFQ+WydkZWxldGUnXT4+XG4gICAgfVxuICB8IHtcbiAgICAgIGFyZ3M6IFBhcmFtZXRlcnM8QWZ0ZXJPcGVyYXRpb25NYXA8VD5bJ2RlbGV0ZUJ5SUQnXT5bMF1cbiAgICAgIG9wZXJhdGlvbjogJ2RlbGV0ZUJ5SUQnXG4gICAgICByZXN1bHQ6IEF3YWl0ZWQ8UmV0dXJuVHlwZTxBZnRlck9wZXJhdGlvbk1hcDxUPlsnZGVsZXRlQnlJRCddPj5cbiAgICB9XG4gIHwge1xuICAgICAgYXJnczogUGFyYW1ldGVyczxBZnRlck9wZXJhdGlvbk1hcDxUPlsnZmluZCddPlswXVxuICAgICAgb3BlcmF0aW9uOiAnZmluZCdcbiAgICAgIHJlc3VsdDogQXdhaXRlZDxSZXR1cm5UeXBlPEFmdGVyT3BlcmF0aW9uTWFwPFQ+WydmaW5kJ10+PlxuICAgIH1cbiAgfCB7XG4gICAgICBhcmdzOiBQYXJhbWV0ZXJzPEFmdGVyT3BlcmF0aW9uTWFwPFQ+WydmaW5kQnlJRCddPlswXVxuICAgICAgb3BlcmF0aW9uOiAnZmluZEJ5SUQnXG4gICAgICByZXN1bHQ6IEF3YWl0ZWQ8UmV0dXJuVHlwZTxBZnRlck9wZXJhdGlvbk1hcDxUPlsnZmluZEJ5SUQnXT4+XG4gICAgfVxuICB8IHtcbiAgICAgIGFyZ3M6IFBhcmFtZXRlcnM8QWZ0ZXJPcGVyYXRpb25NYXA8VD5bJ2ZvcmdvdFBhc3N3b3JkJ10+WzBdXG4gICAgICBvcGVyYXRpb246ICdmb3Jnb3RQYXNzd29yZCdcbiAgICAgIHJlc3VsdDogQXdhaXRlZDxSZXR1cm5UeXBlPEFmdGVyT3BlcmF0aW9uTWFwPFQ+Wydmb3Jnb3RQYXNzd29yZCddPj5cbiAgICB9XG4gIHwge1xuICAgICAgYXJnczogUGFyYW1ldGVyczxBZnRlck9wZXJhdGlvbk1hcDxUPlsnbG9naW4nXT5bMF1cbiAgICAgIG9wZXJhdGlvbjogJ2xvZ2luJ1xuICAgICAgcmVzdWx0OiBBd2FpdGVkPFJldHVyblR5cGU8QWZ0ZXJPcGVyYXRpb25NYXA8VD5bJ2xvZ2luJ10+PlxuICAgIH1cbiAgfCB7XG4gICAgICBhcmdzOiBQYXJhbWV0ZXJzPEFmdGVyT3BlcmF0aW9uTWFwPFQ+WydyZWZyZXNoJ10+WzBdXG4gICAgICBvcGVyYXRpb246ICdyZWZyZXNoJ1xuICAgICAgcmVzdWx0OiBBd2FpdGVkPFJldHVyblR5cGU8QWZ0ZXJPcGVyYXRpb25NYXA8VD5bJ3JlZnJlc2gnXT4+XG4gICAgfVxuICB8IHtcbiAgICAgIGFyZ3M6IFBhcmFtZXRlcnM8QWZ0ZXJPcGVyYXRpb25NYXA8VD5bJ3VwZGF0ZSddPlswXVxuICAgICAgb3BlcmF0aW9uOiAndXBkYXRlJ1xuICAgICAgcmVzdWx0OiBBd2FpdGVkPFJldHVyblR5cGU8QWZ0ZXJPcGVyYXRpb25NYXA8VD5bJ3VwZGF0ZSddPj5cbiAgICB9XG4gIHwge1xuICAgICAgYXJnczogUGFyYW1ldGVyczxBZnRlck9wZXJhdGlvbk1hcDxUPlsndXBkYXRlQnlJRCddPlswXVxuICAgICAgb3BlcmF0aW9uOiAndXBkYXRlQnlJRCdcbiAgICAgIHJlc3VsdDogQXdhaXRlZDxSZXR1cm5UeXBlPEFmdGVyT3BlcmF0aW9uTWFwPFQ+Wyd1cGRhdGVCeUlEJ10+PlxuICAgIH1cbilcblxuLy8gZXhwb3J0IHR5cGUgQWZ0ZXJPcGVyYXRpb25Ib29rID0gdHlwZW9mIGJ1aWxkQWZ0ZXJPcGVyYXRpb247XG5cbmV4cG9ydCBjb25zdCBidWlsZEFmdGVyT3BlcmF0aW9uID0gYXN5bmMgPFxuICBUIGV4dGVuZHMgVHlwZVdpdGhJRCA9IGFueSxcbiAgTyBleHRlbmRzIGtleW9mIEFmdGVyT3BlcmF0aW9uTWFwPFQ+ID0ga2V5b2YgQWZ0ZXJPcGVyYXRpb25NYXA8VD4sXG4+KFxuICBvcGVyYXRpb25BcmdzOiBPbWl0PEFmdGVyT3BlcmF0aW9uQXJnPFQ+LCAncmVxJz4gJiB7IG9wZXJhdGlvbjogTyB9LFxuKTogUHJvbWlzZTxBd2FpdGVkPFJldHVyblR5cGU8QWZ0ZXJPcGVyYXRpb25NYXA8VD5bT10+Pj4gPT4ge1xuICBjb25zdCB7IGFyZ3MsIGNvbGxlY3Rpb24sIG9wZXJhdGlvbiwgcmVzdWx0IH0gPSBvcGVyYXRpb25BcmdzXG5cbiAgbGV0IG5ld1Jlc3VsdCA9IHJlc3VsdFxuXG4gIGF3YWl0IGFyZ3MuY29sbGVjdGlvbi5jb25maWcuaG9va3MuYWZ0ZXJPcGVyYXRpb24ucmVkdWNlKFxuICAgIGFzeW5jIChwcmlvckhvb2ssIGhvb2s6IEFmdGVyT3BlcmF0aW9uSG9vazxUPikgPT4ge1xuICAgICAgYXdhaXQgcHJpb3JIb29rXG5cbiAgICAgIGNvbnN0IGhvb2tSZXN1bHQgPSBhd2FpdCBob29rKHtcbiAgICAgICAgYXJncyxcbiAgICAgICAgY29sbGVjdGlvbixcbiAgICAgICAgb3BlcmF0aW9uLFxuICAgICAgICByZXE6IGFyZ3MucmVxLFxuICAgICAgICByZXN1bHQ6IG5ld1Jlc3VsdCxcbiAgICAgIH0gYXMgQWZ0ZXJPcGVyYXRpb25Bcmc8VD4pXG5cbiAgICAgIGlmIChob29rUmVzdWx0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgbmV3UmVzdWx0ID0gaG9va1Jlc3VsdFxuICAgICAgfVxuICAgIH0sXG4gICAgUHJvbWlzZS5yZXNvbHZlKCksXG4gIClcblxuICByZXR1cm4gbmV3UmVzdWx0XG59XG4iXSwibmFtZXMiOlsiYnVpbGRBZnRlck9wZXJhdGlvbiIsIm9wZXJhdGlvbkFyZ3MiLCJhcmdzIiwiY29sbGVjdGlvbiIsIm9wZXJhdGlvbiIsInJlc3VsdCIsIm5ld1Jlc3VsdCIsImNvbmZpZyIsImhvb2tzIiwiYWZ0ZXJPcGVyYXRpb24iLCJyZWR1Y2UiLCJwcmlvckhvb2siLCJob29rIiwiaG9va1Jlc3VsdCIsInJlcSIsInVuZGVmaW5lZCIsIlByb21pc2UiLCJyZXNvbHZlIl0sIm1hcHBpbmdzIjoiOzs7OytCQW9GYUE7OztlQUFBQTs7O0FBQU4sTUFBTUEsc0JBQXNCLE9BSWpDQztJQUVBLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxVQUFVLEVBQUVDLFNBQVMsRUFBRUMsTUFBTSxFQUFFLEdBQUdKO0lBRWhELElBQUlLLFlBQVlEO0lBRWhCLE1BQU1ILEtBQUtDLFVBQVUsQ0FBQ0ksTUFBTSxDQUFDQyxLQUFLLENBQUNDLGNBQWMsQ0FBQ0MsTUFBTSxDQUN0RCxPQUFPQyxXQUFXQztRQUNoQixNQUFNRDtRQUVOLE1BQU1FLGFBQWEsTUFBTUQsS0FBSztZQUM1QlY7WUFDQUM7WUFDQUM7WUFDQVUsS0FBS1osS0FBS1ksR0FBRztZQUNiVCxRQUFRQztRQUNWO1FBRUEsSUFBSU8sZUFBZUUsV0FBVztZQUM1QlQsWUFBWU87UUFDZDtJQUNGLEdBQ0FHLFFBQVFDLE9BQU87SUFHakIsT0FBT1g7QUFDVCJ9